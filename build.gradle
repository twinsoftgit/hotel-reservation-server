buildscript {
	ext {
		springBootVersion = '1.5.4.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

version = '0.0.1-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

jar {
    baseName = 'hotel-reservation-server'
    version = '0.0.1'
}

bootRun {
    if ( project.hasProperty('jvmArgs') ) {
        jvmArgs = (project.jvmArgs.split("\\s+") as List)
    }
}
springBoot {
    mainClass = "com.twinsoft.HotelReservationServerApplication"
}
repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web')
 	compile('org.projectlombok:lombok:1.16.12')
 	runtime('com.h2database:h2')
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.security:spring-security-jwt:1.0.4.RELEASE")
    compile("org.springframework.security.oauth:spring-security-oauth2:2.0.10.RELEASE")
 	compile("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.8.1") 
    compile('com.fasterxml.jackson.datatype:jackson-datatype-joda:2.6.3')
    compile("org.springframework.amqp:spring-rabbit")
    compile("org.springframework.boot:spring-boot-starter-data-redis")
   	compile "commons-io:commons-io:2.5"
    compile('javax.inject:javax.inject:1')
    compile('com.google.guava:guava:19.0')
 	compile 'com.jayway.jsonpath:json-path:2.4.0'
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile("org.springframework.restdocs:spring-restdocs-mockmvc")
}


